---
import Layout from '../../layouts/Layout.astro';

// Check authentication on page load
let isAuthenticated = false;
const sessionStr = Astro.cookies.get('alusteel_session')?.value;

if (sessionStr) {
  try {
    const session = JSON.parse(sessionStr);
    if (session && session.user) {
      isAuthenticated = true;
    }
  } catch (e) {
    // Invalid session
  }
}

// Redirect if not authenticated
if (!isAuthenticated) {
  return Astro.redirect('/admin/login');
}

// Simulation de données locales
const articles = [
  {
    id: 1,
    title: "Les tendances menuiserie 2025",
    excerpt: "Découvrez les dernières innovations en matière de menuiserie aluminium et PVC.",
    content: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
    date: "2025-03-15",
    category: "Tendances",
    media: [
      {
        type: "image",
        url: "/images/blog/menuiserie-tendances-1.jpg"
      },
      {
        type: "image",
        url: "/images/blog/menuiserie-tendances-2.jpg"
      },
      {
        type: "video",
        url: "/videos/blog/menuiserie-tendances.mp4"
      }
    ]
  },
  {
    id: 2,
    title: "Comment choisir ses fenêtres ?",
    excerpt: "Guide complet pour sélectionner les fenêtres adaptées à votre habitat.",
    content: "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
    date: "2025-03-10",
    category: "Guides",
    media: [
      {
        type: "image",
        url: "/images/blog/guide-fenetres-1.jpg"
      }
    ]
  }
];

const categories = ["Tendances", "Guides", "Conseils", "Actualités", "Sécurité"];
---

<Layout title="Gestion du blog">
  <div class="pt-32 pb-20">
    <div class="container mx-auto px-4">
      <div class="max-w-6xl mx-auto">
        <!-- Header -->
        <div class="flex justify-between items-center mb-8">
          <div>
            <h1 class="text-3xl font-bold">Gestion du blog</h1>
            <p class="text-gray-600 mt-2">Gérez vos articles et actualités</p>
          </div>
          <div class="flex gap-4">
            <a 
              href="/admin"
              class="px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:border-primary hover:text-primary transition-colors"
            >
              Retour
            </a>
            <button 
              id="add-article-btn"
              class="px-4 py-2 bg-primary text-white rounded-lg hover:bg-secondary transition-colors"
            >
              Ajouter un article
            </button>
          </div>
        </div>

        <!-- Articles List -->
        <div class="bg-white rounded-xl shadow-lg overflow-hidden">
          <div class="p-6">
            <div class="overflow-x-auto">
              <table class="w-full">
                <thead>
                  <tr class="border-b">
                    <th class="text-left py-4 px-4">Médias</th>
                    <th class="text-left py-4 px-4">Titre</th>
                    <th class="text-left py-4 px-4">Catégorie</th>
                    <th class="text-left py-4 px-4">Date</th>
                    <th class="text-left py-4 px-4">Extrait</th>
                    <th class="text-right py-4 px-4">Actions</th>
                  </tr>
                </thead>
                <tbody>
                  {articles.map((article) => (
                    <tr class="border-b hover:bg-gray-50">
                      <td class="py-4 px-4">
                        <div class="flex -space-x-2">
                          {article.media.map((media, index) => (
                            media.type === 'image' ? (
                              <img 
                                src={media.url} 
                                alt={`${article.title} - Media ${index + 1}`}
                                class="w-16 h-16 object-cover rounded-lg border-2 border-white"
                              />
                            ) : (
                              <div class="w-16 h-16 bg-gray-100 rounded-lg border-2 border-white flex items-center justify-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                                </svg>
                              </div>
                            )
                          ))}
                        </div>
                      </td>
                      <td class="py-4 px-4 font-medium">{article.title}</td>
                      <td class="py-4 px-4">
                        <span class="px-3 py-1 bg-primary/10 text-primary rounded-full">
                          {article.category}
                        </span>
                      </td>
                      <td class="py-4 px-4 text-gray-600">{article.date}</td>
                      <td class="py-4 px-4 text-gray-600">{article.excerpt}</td>
                      <td class="py-4 px-4">
                        <div class="flex justify-end gap-2">
                          <button 
                            class="edit-article-btn p-2 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors"
                            data-article-id={article.id}
                          >
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                            </svg>
                          </button>
                          <button 
                            class="delete-article-btn p-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors"
                            data-article-id={article.id}
                          >
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                            </svg>
                          </button>
                        </div>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Modal pour ajouter/modifier un article -->
  <div id="article-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center">
    <div class="bg-white rounded-xl shadow-lg p-8 max-w-4xl w-full mx-4">
      <h2 id="modal-title" class="text-2xl font-bold mb-6">Ajouter un article</h2>
      
      <form id="article-form" class="space-y-6">
        <input type="hidden" id="article-id" />
        
        <div class="grid grid-cols-2 gap-6">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">
              Titre
            </label>
            <input
              type="text"
              id="article-title"
              required
              class="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-primary focus:border-primary"
            />
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">
              Catégorie
            </label>
            <select
              id="article-category"
              required
              class="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-primary focus:border-primary"
            >
              {categories.map((category) => (
                <option value={category}>{category}</option>
              ))}
            </select>
          </div>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">
            Date de publication
          </label>
          <input
            type="date"
            id="article-date"
            required
            class="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-primary focus:border-primary"
          />
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">
            Extrait
          </label>
          <textarea
            id="article-excerpt"
            required
            rows="2"
            class="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-primary focus:border-primary"
          ></textarea>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">
            Contenu
          </label>
          <textarea
            id="article-content"
            required
            rows="8"
            class="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-primary focus:border-primary"
          ></textarea>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">
            Médias
          </label>
          <div class="space-y-4">
            <!-- Liste des médias -->
            <div id="media-list" class="grid grid-cols-4 gap-4">
              <!-- Les médias seront ajoutés ici dynamiquement -->
            </div>

            <!-- Boutons d'ajout -->
            <div class="flex gap-4">
              <button
                type="button"
                id="add-image-btn"
                class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors flex items-center gap-2"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                </svg>
                Ajouter une image
              </button>
              <button
                type="button"
                id="add-video-btn"
                class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors flex items-center gap-2"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                </svg>
                Ajouter une vidéo
              </button>
            </div>

            <!-- Input file caché -->
            <input
              type="file"
              id="media-input"
              class="hidden"
              multiple
              accept="image/jpeg,image/png,image/gif,video/mp4,video/webm"
            />
          </div>
        </div>

        <div class="flex justify-end gap-4 pt-4">
          <button
            type="button"
            id="cancel-btn"
            class="px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:border-gray-400 transition-colors"
          >
            Annuler
          </button>
          <button
            type="submit"
            class="px-6 py-2 bg-primary text-white rounded-lg hover:bg-secondary transition-colors"
          >
            Enregistrer
          </button>
        </div>
      </form>
    </div>
  </div>
</Layout>

<script>
  // Client-side authentication check
  function checkAuth() {
    const session = localStorage.getItem('alusteel_session');
    if (!session) {
      window.location.href = '/admin/login';
    }
  }
  
  // Check auth on page load
  checkAuth();

  // Définir les données pour qu'elles soient accessibles dans le script
  const articles = [
    {
      id: 1,
      title: "Les tendances menuiserie 2025",
      excerpt: "Découvrez les dernières innovations en matière de menuiserie aluminium et PVC.",
      content: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
      date: "2025-03-15",
      category: "Tendances",
      media: [
        {
          type: "image",
          url: "/images/blog/menuiserie-tendances-1.jpg"
        },
        {
          type: "image",
          url: "/images/blog/menuiserie-tendances-2.jpg"
        },
        {
          type: "video",
          url: "/videos/blog/menuiserie-tendances.mp4"
        }
      ]
    },
    {
      id: 2,
      title: "Comment choisir ses fenêtres ?",
      excerpt: "Guide complet pour sélectionner les fenêtres adaptées à votre habitat.",
      content: "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
      date: "2025-03-10",
      category: "Guides",
      media: [
        {
          type: "image",
          url: "/images/blog/guide-fenetres-1.jpg"
        }
      ]
    }
  ];

  const modal = document.getElementById('article-modal');
  const modalTitle = document.getElementById('modal-title');
  const form = document.getElementById('article-form');
  const addBtn = document.getElementById('add-article-btn');
  const cancelBtn = document.getElementById('cancel-btn');
  const articleId = document.getElementById('article-id') as HTMLInputElement;
  const articleTitle = document.getElementById('article-title') as HTMLInputElement;
  const articleCategory = document.getElementById('article-category') as HTMLSelectElement;
  const articleDate = document.getElementById('article-date') as HTMLInputElement;
  const articleExcerpt = document.getElementById('article-excerpt') as HTMLTextAreaElement;
  const articleContent = document.getElementById('article-content') as HTMLTextAreaElement;
  const mediaList = document.getElementById('media-list');
  const addImageBtn = document.getElementById('add-image-btn');
  const addVideoBtn = document.getElementById('add-video-btn');
  const mediaInput = document.getElementById('media-input') as HTMLInputElement;
  
  let articleMedia: { type: string; file: File; preview: string }[] = [];

  // Fonction pour créer un élément média
  function createMediaElement(type: string, file: File, preview: string) {
    const div = document.createElement('div');
    div.className = 'relative group';
    
    if (type === 'image') {
      const img = document.createElement('img');
      img.src = preview;
      img.className = 'w-full h-32 object-cover rounded-lg';
      div.appendChild(img);
    } else {
      const video = document.createElement('video');
      video.src = preview;
      video.className = 'w-full h-32 object-cover rounded-lg';
      video.muted = true;
      video.loop = true;
      video.play();
      div.appendChild(video);
    }

    // Bouton de suppression
    const deleteBtn = document.createElement('button');
    deleteBtn.type = 'button';
    deleteBtn.className = 'absolute top-2 right-2 p-1 bg-red-500 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity';
    deleteBtn.innerHTML = `
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
      </svg>
    `;
    deleteBtn.addEventListener('click', () => {
      const index = articleMedia.findIndex(m => m.preview === preview);
      if (index !== -1) {
        articleMedia.splice(index, 1);
        div.remove();
      }
    });
    div.appendChild(deleteBtn);

    return div;
  }

  // Gérer l'ajout d'images
  addImageBtn?.addEventListener('click', () => {
    mediaInput.accept = 'image/jpeg,image/png,image/gif';
    mediaInput.click();
  });

  // Gérer l'ajout de vidéos
  addVideoBtn?.addEventListener('click', () => {
    mediaInput.accept = 'video/mp4,video/webm';
    mediaInput.click();
  });

  // Gérer la sélection des fichiers
  mediaInput?.addEventListener('change', (e) => {
    const files = (e.target as HTMLInputElement).files;
    if (!files) return;

    Array.from(files).forEach(file => {
      const isVideo = file.type.startsWith('video/');
      const maxSize = isVideo ? 10 * 1024 * 1024 : 2 * 1024 * 1024;

      // Vérifier la taille
      if (file.size > maxSize) {
        alert(`Le fichier ${file.name} est trop volumineux (max: ${maxSize / (1024 * 1024)}Mo)`);
        return;
      }

      // Vérifier le type
      if (isVideo && !file.type.match('video/(mp4|webm)')) {
        alert('Format vidéo non supporté. Utilisez MP4 ou WebM.');
        return;
      } else if (!isVideo && !file.type.match('image/(jpeg|png|gif)')) {
        alert('Format d\'image non supporté. Utilisez JPG, PNG ou GIF.');
        return;
      }

      const preview = URL.createObjectURL(file);
      const type = isVideo ? 'video' : 'image';
      
      articleMedia.push({ type, file, preview });
      mediaList?.appendChild(createMediaElement(type, file, preview));
    });

    mediaInput.value = '';
  });

  // Ouvrir le modal pour ajouter
  addBtn?.addEventListener('click', () => {
    modalTitle!.textContent = 'Ajouter un article';
    form?.reset();
    articleId.value = '';
    articleMedia = [];
    if (mediaList) mediaList.innerHTML = '';
    modal?.classList.remove('hidden');
    modal?.classList.add('flex');
  });

  // Fermer le modal
  cancelBtn?.addEventListener('click', () => {
    modal?.classList.add('hidden');
    modal?.classList.remove('flex');
  });

  // Gérer la soumission du formulaire
  form?.addEventListener('submit', (e) => {
    e.preventDefault();
    const isEditing = articleId.value !== '';
    
    // Simuler la sauvegarde des fichiers
    console.log('Médias à uploader:', articleMedia.map(m => ({
      type: m.type,
      filename: m.file.name
    })));
    
    alert(`Article ${isEditing ? 'modifié' : 'ajouté'} avec succès (simulation)`);
    modal?.classList.add('hidden');
    modal?.classList.remove('flex');
  });

  // Gérer les boutons d'édition
  document.querySelectorAll('.edit-article-btn').forEach(btn => {
    btn.addEventListener('click', () => {
      const id = btn.getAttribute('data-article-id');
      modalTitle!.textContent = 'Modifier l\'article';
      
      // Trouver l'article correspondant
      const article = articles.find(a => a.id.toString() === id);
      if (article) {
        articleId.value = id!;
        articleTitle.value = article.title;
        articleCategory.value = article.category;
        articleDate.value = article.date;
        articleExcerpt.value = article.excerpt;
        articleContent.value = article.content;
        
        // Charger les médias existants
        articleMedia = [];
        if (mediaList) mediaList.innerHTML = '';
        
        article.media.forEach(m => {
          // Dans une vraie application, nous chargerions les vrais fichiers
          const dummyFile = new File([""], m.url.split('/').pop()!, { type: `${m.type}/${m.type === 'video' ? 'mp4' : 'jpeg'}` });
          const preview = m.url;
          articleMedia.push({ type: m.type, file: dummyFile, preview });
          mediaList?.appendChild(createMediaElement(m.type, dummyFile, preview));
        });
      }
      
      modal?.classList.remove('hidden');
      modal?.classList.add('flex');
    });
  });

  // Gérer les boutons de suppression
  document.querySelectorAll('.delete-article-btn').forEach(btn => {
    btn.addEventListener('click', () => {
      const id = btn.getAttribute('data-article-id');
      if (confirm('Êtes-vous sûr de vouloir supprimer cet article ?')) {
        alert('Article supprimé avec succès (simulation)');
      }
    });
  });
</script>