---
import Layout from '../../layouts/Layout.astro';
import { supabase } from '/src/supabase.ts'; // Chemin absolu vers src/supabase.ts

// Check if already logged in
const { data: { session } } = await supabase.auth.getSession();
if (session) {
  return Astro.redirect('/admin');
}

// Access code (in a real app, this would be stored securely)
const ACCESS_CODE = "ALUSTEEL2025";
---

<Layout title="Iniciar sessão">
  <div class="min-h-screen pt-32 pb-20">
    <div class="container mx-auto px-4">
      <div class="max-w-md mx-auto">
        <div class="bg-white rounded-xl shadow-lg p-8">
          <h1 class="text-2xl font-bold mb-6 text-center">Iniciar sessão</h1>
          
          <form id="login-form" class="space-y-4">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">
                Email
              </label>
              <input
                type="email"
                name="email"
                value="admin@alusteel.pt"
                required
                class="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-primary focus:border-primary"
              />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">
                Palavra-passe
              </label>
              <input
                type="password"
                name="password"
                value="Admin123!"
                required
                class="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-primary focus:border-primary"
              />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">
                Código de acesso
              </label>
              <input
                type="text"
                name="accessCode"
                value="ALUSTEEL2025"
                required
                class="w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-primary focus:border-primary"
              />
            </div>

            <div id="error-message" class="text-red-500 text-sm hidden"></div>

            <button
              type="submit"
              class="w-full px-6 py-3 bg-primary text-white rounded-lg hover:bg-secondary transition-colors"
            >
              Iniciar sessão
            </button>
          </form>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { supabase } from '/src/supabase.ts'; // Chemin absolu vers src/supabase.ts
  import { localAuth } from '../../lib/auth';

  const form = document.getElementById('login-form');
  const errorMessage = document.getElementById('error-message');

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target as HTMLFormElement);
    
    // Verify access code first
    const accessCode = formData.get('accessCode') as string;
    if (accessCode !== 'ALUSTEEL2025') {
      if (errorMessage) {
        errorMessage.textContent = 'Código de acesso inválido';
        errorMessage.classList.remove('hidden');
      }
      return;
    }

    const email = formData.get('email') as string;
    const password = formData.get('password') as string;
    
    try {
      // Check if Supabase is configured
      const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
      const supabaseAnonKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
      const isSupabaseConfigured = supabaseUrl && supabaseAnonKey && 
        supabaseUrl !== 'your-project-url' && supabaseAnonKey !== 'your-anon-key';
      
      let authResult;
      
      if (isSupabaseConfigured) {
        // Sign in with Supabase
        authResult = await supabase.auth.signInWithPassword({
          email,
          password
        });
      } else {
        // Use local auth as fallback
        authResult = await localAuth.signIn(email, password, accessCode);
      }
      
      if (authResult.error) {
        throw authResult.error;
      }
      
      if (authResult.data.session) {
        // Store session in localStorage for client-side checks
        localStorage.setItem('alusteel_session', JSON.stringify({ user: authResult.data.session.user }));
        
        // Also set a cookie for initial page load checks
        document.cookie = `alusteel_session=${JSON.stringify({ user: authResult.data.session.user })}; path=/; max-age=86400`;
        
        // Redirect to admin
        window.location.href = '/admin';
      }
    } catch (error: any) {
      if (errorMessage) {
        errorMessage.textContent = error.message || 'Email ou palavra-passe incorretos';
        errorMessage.classList.remove('hidden');
      }
    }
  });
</script>